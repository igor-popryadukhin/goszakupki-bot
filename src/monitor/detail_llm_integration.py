from typing import List
from ..llm.enhanced_client import EnhancedLLMClient
from ..config_llm import USE_LLM, LLM_PROVIDER, LLM_MODEL, LLM_API_KEY

class DetailLLMIntegrationMixin:
    """Mixin –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è LLM –∞–Ω–∞–ª–∏–∑–∞ –≤ DetailMonitorService"""
    
    def _init_llm_client(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è LLM –∫–ª–∏–µ–Ω—Ç–∞"""
        self.llm_client = None
        if USE_LLM and LLM_API_KEY:
            try:
                self.llm_client = EnhancedLLMClient(LLM_PROVIDER, LLM_MODEL, LLM_API_KEY)
                print("‚úÖ LLM –∫–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞")
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ LLM: {e}")
    
    async def _llm_relevance_check(self, html_content: str, text_content: str, keywords: List[str]) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ LLM –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞"""
        if not self.llm_client:
            return True
        
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º HTML –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
            analysis = await self.llm_client.analyze_relevance(html_content, keywords)
            print(f"üîç –î–µ—Ç–∞–ª—å–Ω—ã–π LLM –∞–Ω–∞–ª–∏–∑: relevant={analysis['relevant']}, confidence={analysis['confidence']:.2f}")
            return analysis['relevant'] and analysis['confidence'] > 0.6
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ LLM –∞–Ω–∞–ª–∏–∑–∞: {e}")
            return True
